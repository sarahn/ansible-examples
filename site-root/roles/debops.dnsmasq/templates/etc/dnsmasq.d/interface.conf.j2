{% if ((item.interface is defined and item.interface) and
       ((hostvars[inventory_hostname]["ansible_" + item.interface] is defined and
         hostvars[inventory_hostname]["ansible_" + item.interface]) and
       ((hostvars[inventory_hostname]["ansible_" + item.interface].ipv4 is defined and
         hostvars[inventory_hostname]["ansible_" + item.interface].ipv4) or
        (hostvars[inventory_hostname]["ansible_" + item.interface].ipv6 is defined and
         hostvars[inventory_hostname]["ansible_" + item.interface].ipv6)))) %}
{% set dnsmasq_tpl_ipv4 = '' %}
{% set dnsmasq_tpl_ipv6 = [] %}
{% if hostvars[inventory_hostname]["ansible_" + item.interface].ipv4 is defined and hostvars[inventory_hostname]["ansible_" + item.interface].ipv4 %}
{% set dnsmasq_tpl_ipv4 = hostvars[inventory_hostname]["ansible_" + item.interface].ipv4.address + '/' + hostvars[inventory_hostname]["ansible_" + item.interface].ipv4.netmask %}
{% endif %}
{% if hostvars[inventory_hostname]["ansible_" + item.interface].ipv6 is defined and hostvars[inventory_hostname]["ansible_" + item.interface].ipv6 %}
{% for element in hostvars[inventory_hostname]["ansible_" + item.interface].ipv6 %}
{% if not element.address | ipv6('link-local') %}
{% set _ = dnsmasq_tpl_ipv6.append(element.address + '/' + element.prefix) %}
{% endif %}
{% endfor %}
{% endif %}
# This file is managed by Ansible, all changes will be lost


# ---- Network interface options ----

# Bind on specified interface
interface = {{ item.interface }}


# ---- DHCP options ----

{% if dnsmasq_dhcpv4 is defined and dnsmasq_dhcpv4 %}
{% if dnsmasq_tpl_ipv4 is defined and dnsmasq_tpl_ipv4 %}
# Enable DHCPv4 server
dhcp-range = set:{{ item.interface }},{{ dnsmasq_tpl_ipv4 | ipv4(item.dhcp_range_start | default("10")) | ipv4('address') }},{{ dnsmasq_tpl_ipv4 | ipv4(item.dhcp_range_end | default("-10")) | ipv4('address') }},{{ item.dhcp_lease | default('24h') }}

{% endif %}
{% endif %}
{% if dnsmasq_dhcpv6 is defined and dnsmasq_dhcpv6 %}
{% if dnsmasq_tpl_ipv6 is defined and dnsmasq_tpl_ipv6 %}
# Enable DHCPv6 server
{% for element in dnsmasq_tpl_ipv6 %}
dhcp-range = set:{{ item.interface }},{{ element | ipv6(item.dhcp_range_start | default('10')) | ipv6('address') }},{{ element | ipv6(item.dhcp_range_end | default('-10')) | ipv6('address') }},{{ item.ipv6_mode | default('ra-names,ra-stateless,slaac') }},{{ element | ipv6('prefix') }},{{ item.dhcp_lease | default('24h') }}
{% endfor %}

{% endif %}
{% endif %}
{% if dnsmasq_router is defined and dnsmasq_router %}
# IPv4 router advertisement
dhcp-option = tag:{{ item.interface }},option:router,0.0.0.0

{% else %}
# IPv4 router advertisements are disabled
dhcp-option = tag:{{ item.interface }},option:router

{% endif %}
{% if dnsmasq_search is defined and dnsmasq_search %}
{% set dnsmasq_tpl_search = [] %}
{% for domain in dnsmasq_search %}
{% set _ = dnsmasq_tpl_search.append(domain) %}
{% endfor %}
{% if dnsmasq_register_search is defined and dnsmasq_register_search %}
{% for domain in dnsmasq_register_search.stdout_lines | difference(dnsmasq_search) %}
{% set _ = dnsmasq_tpl_search.append(domain) %}
{% endfor %}
{% endif %}
# Advertise list of search domains in DHCP
dhcp-option = tag:{{ item.interface }},option:domain-search,{{ dnsmasq_tpl_search | join(",") }}
dhcp-option = tag:{{ item.interface }},option6:domain-search,{{ dnsmasq_tpl_search | join(",") }}
{% endif %}

{% if dnsmasq_tpl_ipv6 %}
# Advertise RDNSS servers for local IPv6 network
dhcp-option = tag:{{ item.interface }},option6:dns-server,{{ dnsmasq_tpl_ipv6 | ipv6('address') | ipwrap | join(",") }}
{% endif %}
{% if dnsmasq_tftp is defined and dnsmasq_tftp %}

# ---- TFTP options ----

# Enable TFTP service on specified interface
enable-tftp = {{ item.interface }}
tftp-root = {{ dnsmasq_tftp_root | default('/srv/tftpboot') }},{{ item.interface }}
dhcp-boot = tag:{{ item.interface }},{{ dnsmasq_tftp_boot | default('pxelinux.0') }}

{% endif %}
{% if item.name is defined and item.name %}

# ---- DNS options ----

# A record of the {{ item.interface }} interface
interface-name = {{ item.name + '.' + dnsmasq_domain }},{{ item.interface }}

# Additional CNAME records for {{ item.interface }} interface
cname = {{ item.name + '.' + ansible_hostname }},{{ item.name + '.' + dnsmasq_domain }}
cname = {{ item.name }},{{ item.name + '.' + dnsmasq_domain }}

{% if item.aliases is defined and item.aliases %}
{% for name in item.aliases %}
cname = {{ name + '.' + dnsmasq_domain }},{{ item.name + '.' + dnsmasq_domain }}
cname = {{ name + '.' + ansible_hostname }},{{ item.name + '.' + dnsmasq_domain }}
cname = {{ name }},{{ item.name + '.' + dnsmasq_domain }}

{% endfor %}
{% endif %}
{% endif %}
{% else %}
# This file is managed by Ansible, all changes will be lost

# Interface {{ item.interface }} does not have any IP addresses
{% endif %}

