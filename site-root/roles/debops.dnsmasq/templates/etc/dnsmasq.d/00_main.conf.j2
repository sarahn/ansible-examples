# This file is managed by Ansible, all changes will be lost


# ---- General options ----

#{% if ((dnsmasq_ipv4_gateway is defined and dnsmasq_ipv4_gateway) and
       (hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway] is defined and
        hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway]) and
       (hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4 is defined and
        hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4) and
       (hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4.address | ipaddr('public'))) %}
# Don't forward private IP address queries to external networks
bogus-priv

{% endif %}
# Enable connection tracking support
conntrack

{% if dnsmasq_router is defined and dnsmasq_router %}
# Enable IPv6 Router Advertisements
enable-ra

{% endif %}

# ---- Network interfaces ----

# Bind only to specified interfaces (this will be set for example by libvirt
# package, so we need to just go with it)
bind-interfaces

# Bind to loopback interface for local DNS queries
interface = lo
no-dhcp-interface = lo

{% if dnsmasq_public_dns is defined and dnsmasq_public_dns %}
{% if ((dnsmasq_ipv4_gateway is defined and dnsmasq_ipv4_gateway) and (hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4 is defined and hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4)) %}
# Bind to local IPv4 gateway for remote DNS queries
interface = {{ dnsmasq_ipv4_gateway }}
no-dhcp-interface = {{ dnsmasq_ipv4_gateway }}

{% endif %}
{% if (((dnsmasq_ipv6_gateway is defined and dnsmasq_ipv6_gateway) and (dnsmasq_ipv6_gateway != dnsmasq_ipv4_gateway)) and (hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv6_gateway].ipv6 is defined and hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv6_gateway].ipv6)) %}
# Bind to local IPv6 gateway for remote DNS queries
interface = {{ dnsmasq_ipv6_gateway }}
no-dhcp-interface = {{ dnsmasq_ipv6_gateway }}

{% endif %}
{% endif %}
{% if dnsmasq_upstream_interfaces is defined and dnsmasq_upstream_interfaces %}
{% for interface in dnsmasq_upstream_interfaces %}
{% if hostvars[inventory_hostname]["ansible_" + interface] is defined and hostvars[inventory_hostname]["ansible_" + interface] %}
{% if ((dnsmasq_ipv4_gateway is defined and interface != dnsmasq_ipv4_gateway) and (dnsmasq_ipv6_gateway is defined and interface != dnsmasq_ipv6_gateway)) %}
{% if ((hostvars[inventory_hostname]["ansible_" + interface].ipv4 is defined and hostvars[inventory_hostname]["ansible_" + interface].ipv4) or (hostvars[inventory_hostname]["ansible_" + interface].ipv6 is defined and hostvars[inventory_hostname]["ansible_" + interface].ipv6)) %}
# Don't respond to DHCP or TFTP queries on this interface
interface = {{ interface }}
no-dhcp-interface = {{ interface }}

{% endif %}
{% endif %}
{% endif %}
{% endfor %}
{% endif %}

# ---- DNS options ----

{% if dnsmasq_etc_hosts is defined and dnsmasq_etc_hosts %}
# Use alternative /etc/hosts file
no-hosts
addn-hosts = {{ dnsmasq_etc_hosts }}

{% endif %}
# Return answers for DNS queries depending on the originating network interface
localise-queries

# Don't forward hostname queries to remote DNS servers
domain-needed

# Add domain to hostnames in hosts file
expand-hosts

# Reject private IP addresses from upstream nameservers
stop-dns-rebind

# Allow rebinding of localhost IP address (for RBL support)
rebind-localhost-ok

#{% if ((dnsmasq_ipv4_gateway is defined and dnsmasq_ipv4_gateway) and
       (hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway] is defined and
        hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway]) and
       (hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4 is defined and
        hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4) and
       (not hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4.address | ipaddr('public'))) %}
# Allow rebinding of private IP addresses on server domain (for other servers
# behind local NAT)
rebind-domain-ok = {{ ansible_domain }}

{% endif %}
# Domain used by DHCP server
domain = {{ dnsmasq_domain }}

# Domain managed by the dnsmasq DNS server
local = /{{ dnsmasq_domain }}/

{% if dnsmasq_domain_mx is defined and dnsmasq_domain_mx %}
# Point mails on main domain to a specific host
mx-host = {{dnsmasq_domain }},{{ dnsmasq_domain_mx }},10

# Each host by default maintains its own mail
selfmx

{% endif %}
{% set dnsmasq_tpl_local_record = [] %}
{% if hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway] is defined and hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway] %}
{% if hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4 is defined and hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4 %}
{% set dnsmasq_tpl_local_record = dnsmasq_tpl_local_record + [ hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv4_gateway].ipv4.address ] %}
{% endif %}
{% endif %}
{% if hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv6_gateway] is defined and hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv6_gateway] %}
{% if hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv6_gateway].ipv6 is defined and hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv6_gateway].ipv6 %}
{% for element in hostvars[inventory_hostname]["ansible_" + dnsmasq_ipv6_gateway].ipv6 | map(attribute='address') | list %}
{% if not element | ipv6('link-local') %}
{% set _ = dnsmasq_tpl_local_record.append(element) %}
{% endif %}
{% endfor %}
{% endif %}
{% endif %}
{% if dnsmasq_tpl_local_record is defined and dnsmasq_tpl_local_record %}
# DNS records of the local server
{% for element in dnsmasq_tpl_local_record %}
host-record = {{ ansible_fqdn }},{{ ansible_hostname }},{{ element }}
{% endfor %}

{% endif %}
{% if dnsmasq_cname is defined and dnsmasq_cname %}
# CNAME records
{% for host, list in dnsmasq_cname.iteritems() %}
{% if list is string %}
cname = {{ list + '.' + dnsmasq_domain }},{{ host + '.' + dnsmasq_domain }}
cname = {{ list + '.' + ansible_hostname }},{{ host + '.' + dnsmasq_domain }}
cname = {{ list }},{{ host + '.' + dnsmasq_domain }}

{% else %}
{% for element in list %}
cname = {{ element + '.' + dnsmasq_domain }},{{ host + '.' + dnsmasq_domain }}
cname = {{ element + '.' + ansible_hostname }},{{ host + '.' + dnsmasq_domain }}
cname = {{ element }},{{ host + '.' + dnsmasq_domain }}

{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

 ---- Static lease assignments
{% if  dnsmasq_static_dhcp_hosts is defined and dnsmasq_static_dhcp_hosts %}
{% for host in dnsmasq_static_dhcp_hosts %}
dhcp-host = {{ host.macs|join(',') }},{{ host.ip }}
{% endfor %}
{% endif %}

{% if dnsmasq_options is defined and dnsmasq_options %}
# ---- Custom options ----

{{ dnsmasq_options | regex_replace('\\\\n','\n') }}
{% endif %}

